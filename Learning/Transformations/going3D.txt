By convention, OpenGL is a right-handed system, but in NDCs it actually uses a left-handed system
(handedness is switched by the projection matrix).

When OpenGL draws your cube triangle-by-triangle, fragment by fragment, 
it will overwrite any pixel color that might've already been drawn there before. 
Since OpenGL gives no guarantee on the order of triangles rendered (within the same draw call), 
some triangles are drawn on top of each other even though one should clearly be in front of the other.

OpenGL stores depth information in a buffer called the z-buffer that 
allows OpenGL to decide when to draw over a pixel and when not to. 
Using the z-buffer we can configure OpenGL to do depth-testing.

Since we will be using a depth buffer, we also want to clear it before each render iteration 
(otherwise the depth information of the previous frame stays in the buffer). 
We can clear the depth buffer by specifying the DEPTH_BUFFER_BIT bit in the glClear function.
